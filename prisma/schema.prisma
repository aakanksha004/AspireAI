
generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id            String      @id @default(uuid())
  clerkUserId   String      @unique
  email         String      @unique
  name          String?
  imageUrl      String?
  industry      String?    //combined industry-subindustry (e.g; "tech-software-development")
  
  industryInsight IndustryInsight? @relation(fields:[industry], references:[industry])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  //Profile fields
  bio           String?
  experience    Int?     //Years of experience
  skills        String[]  //Array of skills

  assessments   Assessment[]
  resume        Resume?
  coverLetter   CoverLetter[]
}

model Assessment{
  id            String    @id @default(cuid())
  userId        String    
  user          User      @relation(fields:[userId], references:[id])
  quizScore     Float      //overall quiz score
  questions     Json[]     //Array of {question, answer, userAnswer, isCorrect}
  category      String    //"Technical", "Behavioral", etc
  improvementTip  String?  //AI generated improvement tip
   createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt


 @@index([userId])

}


model Resume{
  id            String    @id @default(cuid())
  userId        String    @unique
  user          User      @relation(fields:[userId], references:[id])
  content      String      @db.Text      //Markdown conetnt
  atsScore     Float?     
  feedback      String? 
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt


}

model CoverLetter{
   id              String    @id @default(cuid())
  userId           String 
  user             User      @relation(fields:[userId], references:[id])
  content          String         //Markdown conetnt
  jobDescription   String?     
  companyName      String    //name of the company applying to
  jobTitle         String    //position applying for
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([userId])


}

model IndustryInsight{
   id              String    @id @default(cuid())
   industry         String    @unique   //the industrythis data belongs to (e.g; "tech-software-development")
  //users in this industry
  users            User[]

  //salary data
  salaryRanges     Json[]   //Array of {role: string, min:float, max:float, loaction:string?}
   
   //Industry trends
   growthRate       Float        //Industry growth rate
   demandLevel      DemandLevel      //"High", "Medium", "Low"
   topSkills        String[]   //Most in-demand skills

  //Market Conditions
  marketOutlook     marketOutlook      //"Positive", "Neutral", "Negative"
  keyTrends         String[]    //Array of current industry trends

  //Learning suggestions
  recommendedSkills String[]    //skills recommended for the indusstry

  lastUpdated     DateTime      @default(now())
  nextUpdate       DateTime     //scheduled update time

  @@index([industry])
}


enum DemandLevel{
  High
  Medium
  Low

}

enum marketOutlook{
  Positive
  Neutral
  Negative
}
